코드를 이해하지 못할 수도 있으니까 이거 꼭 읽어봐.

일단 모든 위키가 이런 식으로 돌아가지는 않을 것 같고, 사실 내가 만든 방식과 같은 위키가 없을지도 모름.

목표는 주소창에 "http://dlfjlskjaf;jdsjfsj;aj/jshswiki/w/검색하고 싶은 단어"를 치면 검색하고 싶은 단어가 검색된 페이지가 나오게 하는 것이었음.

1. 주소창이 어떻게 이루어져 있는가.
간단하게 말하자면 http나 https로 시작해서 :// 붙어있고
그 뒤에 호스트 주소 (naver.com, daum.net, google.com 등등) 붙어있고
그 다음에 /폴더이름 쭉 붙어있고 마지막에 /파일이름이 붙어있음.

예를 들어 호스트가 naver.com 이고 서버에 이름이 daum인 폴더를 올려 놓고 그 안에 google.txt라는 파일을 넣어뒀다고 치면
이 파일을 불러오려면 https://naver.com/daum/google.txt를 주소창에 치면 됨.

그러면 내가 올린 주소는 뭐냐면, 파일을 좀 숨겨둠.
http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/Lorem%20ipsum
호스트가 cameo.zone이고 폴더가 몇개가 중첩이냐..
test폴더 안의 kch폴더 안의 123폴더 안의.... 쭉 들어가서 w폴더의 Lorem%20ipsum(.확장자) 파일을 연 거야 하는데 아님.
왜냐면 내가 주소를 바꿨거든. 이제 그 방법을 설명해주겠음.

2. 동작 순서

일단 폴더는 w, src, e로 나뉘어져 있음. w는 읽는 문서와 html코드 등이 있고
e는 edit의 약자로 썼음. 편집하는 문서와 편집하는 모드의 html코드 등이 있음.
src폴더에는 그냥 이미지나 폰트같은거. w, e 동시에 들어가야 하는 스크립트도 src폴더에 있음.

일단 주소를 입력하고 들어가게 되면 페이지는 index.html을 자동으로 찾아서 보여줌.
(예: naver.com/index.html을 입력하거나 naver.com을 입력하거나 똑같음. 단지 주소창에 써 지는 내용이 다름.
naver.com을 입력하면 주소창에 naver.com이라고 뜰 텐데 naver.com/index.html이라고 치면 주소창에 naver.com/index.html이라고 뜸.)

그래서 우리 사이트의 기본 주소는 (일단은) http://cameo.zone/test/kch/123/126/137/146/jshswiki/w 임.

자 그러면 저걸 치면 index.html을 불러오겠지. 잠시 index.html로 넘어가 봅시다. (w폴더로)

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!참고로 vscode에서 보고 있다면 ctrl하고 주소를 동시에 누르면 링크로 이동한다.!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

보고 왔냐.

사실 뭘 한 건지 모를 것 같아서 다시 한 번 정리해 주겠다.

아! 설명 하나 안했다. 아래에서 같이 덧붙이겠다.

원래 http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/남 현 우 라고 입력하면
남 현 우 라는 확장자가 없는 파일이 열리게 된다. 근데 파일이 없으니까 찾을 수 없다면서 원래 404에러가 떠야 한다.
그런데 폴더에 보면 .htaccess라는 파일이 있는데 이 파일이 404에러 페이지를 index.html로 바꿔준다.
따라서 http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/남 현 우 이렇게 치면 주소는 그대로 남고
index.html을 불러오게 된다. 그러면 body.txt를 다시 불러오게 되고 html의 body부분이 만들어진다.
body 아랫부분 코드에서 주소의 마지막 부분 (남 현 우)를 이용해서 남 현 우.txt 파일을 열게 되고
없다면 문서가 존재하지 않는다는 내용을 보여준다. 또한 주소를 http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/남%20현%20우
으로 바꾸어준다.
(.htaccess파일은 어차피 한 줄 밖에 안 될 뿐더러 볼 필요도 없다.)

******마지막으로 한 번 더 요약하겠다. 이해했으면 건너뛰어라.*******

a. 코드들이 없었다면
1) http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/남 현 우 이런 주소를 입력한다. (주소에 확장자를 입력하지 않았다.)
2) 브라우져는 w폴더 안의 남 현 우 라는 폴더나 파일을 찾는다.
2-1) 그런데 있다면 그 폴더나 파일을 열어서 보여준다.
2-2) 없으면 404에러가 난다. 펑!

b. 코드를 마련해 두면
1) http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/남 현 우 이런 주소를 입력한다. (주소에 확장자를 입력하지 않았다.)
2) a.와 똑같이 404 에러가 난다.
3) 하지만 .htaccess파일을 통해 index.html로 자동 연결시킨다.
4) body.txt를 불러와 index.html의 body태그에 넣는다.
5) body.txt에 있는 내용들이 실행된다.
6) 남 현 우.txt 파일을 w폴더 안에서 찾는다.
6-1) 있으면 내용을 불러온다.
6-2) 없으면 문서가 존재하지 않는다고 내용에 쓴다.
7)주소를 http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/남%20현%20우 으로 바꾼다.

c. 주소에 확장자를 입력했다면
1) http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/남 현 우.txt 라고 입력한다.
2) 남 현 우.txt를 찾는다.
2-1) 있으면 불러온다.
2-2) 없으면 404에러!

d. 기본 주소를 입력한다면
1)http://cameo.zone/test/kch/123/126/137/146/jshswiki/w 를 입력한다.
2)아무것도 없으니 자동으로 w폴더의 index.html을 불러온다. (index.html이 없으면 어케 될지는 모르겠다...)
3)body.txt를 불러오고
4)u의 값이 ""이 된다.
4-1) 예외 처리를 안 했다면 .txt를 검색했을 텐데 그러면 안 되니까
5)if문을 이용하여 이와같은 경우에는 Lorem ipsum.txt를 찾게 해 뒀다.
6) Lorem ipsum.txt는 존재하기 때문에 내용을 띄운다.
7) 주소를 http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/Lorem%20ipsum 으로 바꾼다.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

3. 편집 창

원리는 똑같다. 파일이 다를 뿐.

따라서 이름은 같지만 내용이 다른 .txt파일이 필요하다.
그리고 바로 편집 창을 들어가려면 http://cameo.zone/test/kch/123/126/137/146/jshswiki/e/남 현 우
이런 식으로 주소 입력하면 됨 (w는 문서 e는 편집)

문서 창에서 편집 버튼을 누르면 http://cameo.zone/test/kch/123/126/137/146/jshswiki/e/문서제목 로 링크를 탄다.
편집 창에서 취소 버튼을 누르면 http://cameo.zone/test/kch/123/126/137/146/jshswiki/w/문서제목 으로 링크를 탄다.

궁금한거 있으면 물어보고 제발 꼼꼼히 읽어줬으면 한다.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!앞으로 해야 할 것!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

1. 위키 문법을 만들고 편집시 적용.
2. 편집을 끝내면 .txt파일을 수정하고 저장
3. 회원가입 및 로그인 등등
4. 디자인!
5. 최근 수정 문서
6. 역사 만들기 (가장 어려울 듯)
7. 문법에 포함되는 내용이기는 한데 '분류' 만들기 (어케 하는지 잘 모르겠다)

음... 아직 다들 대학에 있는지는 모르겠는데 내가 너무 급해서 미리 많이 만들어 버린 것 같음.
그래서 따라오기 힘들면 포기할까봐 이렇게 설명까지 적어줬는데 안 읽고 잘 하면 괜찮지만
같이 안 만들면 되게 섭섭할 것 같음... 그래서 나머지 부분(javascript)은 너네 둘이서 잘 만들어 줬으면 좋겠다.
(회원가입(서버처리 부분)하고 역사 부분은 내가 해야 될 것 같지만)